{{template "base" .}}

{{define "title"}}Virtual Terminal{{end}}

{{define "content"}}
  <h2 class="mt-3 text-center">Virtual Terminal</h2>

  <hr/>

  <div class="alert alert-danger text-center d-none" id="card_messages"></div>

  <form 
    action="/payment-succeeded" method="post" autocomplete="off"
    name="charge-form" id="charge_form" 
    class="d-block needs-validation charge-form"
  >
    <div class="mb-3">
      <label for="amount" class="form-label">Amount</label>
      <input 
        type="number" class="form-control" id="amount" name="amount" 
        required="" autocomplete="amount-new"
      />
    </div>

    <div class="mb-3">
      <label for="cardholder_name" class="form-label">Cardholder name</label>
      <input 
        type="text" class="form-control" id="cardholder_name" name="cardholder-name"
        required="" autocomplete="cardholder-name-new"
      />
    </div>

    <div class="mb-3">
      <label for="cardholder_email" class="form-label">Cardholder email</label>
      <input type="email" class="form-control" id="cardholder_email" name="cardholder-email" 
        required="" autocomplete="cardholder-email-new"
      />
    </div>

    <div class="mb-3">
      <label for="card-element" class="form-label">Card number</label>
      <div id="card-element" class="form-control"></div>
      <div class="alert alert-danger text-center d-none" id="card-errors" role="alert"> </div>
      <div class="alert alert-success text-center d-none" id="card-success" role="alert"></div>
    </div>

    <hr/>

    <a id="pay_button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Charge Card</a>

    <div id="payment_processing" class="d-none text-center">
      <div class="spinner-border text-primary">
        <span class="visually-hidden">loading...</span>
      </div>
    </div>

    <input type="hidden" name="payment-intent" id="payment_intent" />
    <input type="hidden" name="payment-intent-method" id="payment_intent_method" />
    <input type="hidden" name="payment-intent-amount" id="payment_intent_amount" />
    <input type="hidden" name="payment-intent-currency" id="payment_intent_currency" />

  </form>
{{end}}

{{define "js"}} 
  <script src="https://js.stripe.com/v3/"></script>

  <script>
    let stripe
    let card
    const cardMessages = document.getElementById("card_messages");
    const payButton = document.getElementById("pay_button");
    const paymentProcessing = document.getElementById("payment_processing");
    const form = document.getElementById("charge_form");

    stripe = Stripe("{{index .StringMap "stripe_key"}}");

    function hidePaymentButton() {
      payButton.classList.add("d-none");
      paymentProcessing.classList.remove("d-none");
    }

    function showPaymentButton() {
      payButton.classList.remove("d-none");
      paymentProcessing.classList.add("d-none");
    }

    function showCardError(errorMessage) {
      cardMessages.classList.remove("d-none")
      cardMessages.classList.remove("alert-success")
      cardMessages.classList.add("alert-danger")
      cardMessages.textContent = errorMessage
    }

    function showCardSuccess() {
      cardMessages.classList.remove("d-none")
      cardMessages.classList.add("alert-success")
      cardMessages.classList.remove("alert-danger")
      cardMessages.textContent = "Payment processed successfully!"
    }


    function val() {
      form.classList.add("was-validated");
      if (form.checkValidity() === false) {
        this.event.preventDefault();
        this.event.stopPropagation();
        return;
      }
      hidePaymentButton()
      const body = {
        amount: String(parseFloat(document.getElementById("amount").value) * 100),
        currency: "cad"
      }

      const requestOptions = {
        method: "post",
        headers: {
          "accept": "application/json",
          "Content-Type": "application/json"
        },
        body: JSON.stringify(body)
      }

      fetch("{{.API}}/api/payment-intent", requestOptions)
        .then((res) => res.text())
        .then((data) => {
          let request
          try {
            request = JSON.parse(data)
            stripe.confirmCardPayment(request.client_secret, {
              payment_method: {
                card,
                billing_details: {
                  name: document.getElementById("cardholder_name").value
                }
              }
            }).then((result) => {
              const paymentIntent = result.paymentIntent;
              if (paymentIntent.status === "succeeded") {
                document.getElementById("payment_intent").value = paymentIntent.id;
                document.getElementById("payment_intent_method").value = paymentIntent.payment_method_types[0];
                document.getElementById("payment_intent_amount").value = paymentIntent.amount;
                document.getElementById("payment_intent_currency").value = paymentIntent.currency;
                paymentProcessing.classList.add("d-none");
                showCardSuccess()
                form.submit();
              } else if (result.error) {
                showCardError(response.error.message);
                showPaymentButton();
              }
            })

          } catch (error) {
            showCardError("Invalid response from payment gateway!")
            showPaymentButton()
          }
        })
    }

    (function() {
      let elements = stripe.elements();

      const style = {
        base: {
          fontSize: "16px",
          lineHeight: "24px"
        }
      };

      card = elements.create("card", {
        style,
        hidePostalCode: true
      });

      card.mount("#card-element");

      card.addEventListener("change", function(event) {
        const errorElement = document.getElementById("card-errors");
        if (event.error) {
          errorElement.classList.remove("d-none");
          errorElement.textContent = event.error.message;
        } else {
          errorElement.classList.add("d-none");
          errorElement.textContent = "";
        }
      }) 
    })()

  </script>
{{end}}